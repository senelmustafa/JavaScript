{"ast":null,"code":"import { types } from \"../types\";\nimport { bookInitialState } from \"./bookInitialState\";\nexport const bookReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : bookInitialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === types.EKLE) {\n    return { ...state,\n      cart: state.cart.find(cartItem => cartItem.id === action.payload.id) ? state.cart.map(cartItem => cartItem.id === action.payload.id ? { ...cartItem,\n        count: cartItem.count + 1\n      } : cartItem) : [...state.cart, { ...action.payload,\n        count: 1\n      }]\n    };\n  }\n\n  if (action.type === types.ARTIR) {\n    return { ...state,\n      cart: state.cart.map(cartItem => cartItem.id === action.payload ? { ...cartItem,\n        count: cartItem.count + 1\n      } : cartItem)\n    };\n  }\n\n  if (action.type === types.AZALT) {\n    return { ...state,\n      cart: state.cart.map(cartItem => cartItem.id === action.payload ? { ...cartItem,\n        count: cartItem.count > 1 ? cartItem.count - 1 : 1\n      } : cartItem)\n    };\n  }\n\n  if (action.type === types.CİKAR) {\n    return { ...state,\n      cart: state.cart.filter(cartItem => cartItem.id !== action.payload)\n    };\n  }\n};","map":{"version":3,"sources":["D:/Techproed/projelerim/javascript/html/5-reacjs/alisverisSepeti/src/store/book/bookReducer.js"],"names":["types","bookInitialState","bookReducer","state","action","type","EKLE","cart","find","cartItem","id","payload","map","count","ARTIR","AZALT","CİKAR","filter"],"mappings":"AAAA,SAASA,KAAT,QAAsB,UAAtB;AACA,SAASC,gBAAT,QAAiC,oBAAjC;AACA,OAAO,MAAMC,WAAW,GAAG,YAAsC;AAAA,MAArCC,KAAqC,uEAA7BF,gBAA6B;AAAA,MAAXG,MAAW;;AAC7D,MAAIA,MAAM,CAACC,IAAP,KAAgBL,KAAK,CAACM,IAA1B,EAAgC;AAC5B,WAAO,EACH,GAAGH,KADA;AAEHI,MAAAA,IAAI,EAAEJ,KAAK,CAACI,IAAN,CAAWC,IAAX,CAAiBC,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBN,MAAM,CAACO,OAAP,CAAeD,EAA7D,IACAP,KAAK,CAACI,IAAN,CAAWK,GAAX,CAAgBH,QAAD,IACbA,QAAQ,CAACC,EAAT,KAAgBN,MAAM,CAACO,OAAP,CAAeD,EAA/B,GACI,EAAE,GAAGD,QAAL;AAAeI,QAAAA,KAAK,EAAEJ,QAAQ,CAACI,KAAT,GAAiB;AAAvC,OADJ,GACiDJ,QAFnD,CADA,GAIF,CACI,GAAGN,KAAK,CAACI,IADb,EACmB,EAAE,GAAGH,MAAM,CAACO,OAAZ;AAAqBE,QAAAA,KAAK,EAAE;AAA5B,OADnB;AAND,KAAP;AAUH;;AACD,MAAIT,MAAM,CAACC,IAAP,KAAgBL,KAAK,CAACc,KAA1B,EAAiC;AAC7B,WAAO,EACH,GAAGX,KADA;AAEHI,MAAAA,IAAI,EAAEJ,KAAK,CAACI,IAAN,CAAWK,GAAX,CAAgBH,QAAD,IACjBA,QAAQ,CAACC,EAAT,KAAgBN,MAAM,CAACO,OAAvB,GACI,EAAE,GAAGF,QAAL;AAAeI,QAAAA,KAAK,EAAEJ,QAAQ,CAACI,KAAT,GAAiB;AAAvC,OADJ,GACiDJ,QAF/C;AAFH,KAAP;AAMH;;AACD,MAAIL,MAAM,CAACC,IAAP,KAAgBL,KAAK,CAACe,KAA1B,EAAiC;AAC7B,WAAO,EACH,GAAGZ,KADA;AAEHI,MAAAA,IAAI,EAAEJ,KAAK,CAACI,IAAN,CAAWK,GAAX,CAAgBH,QAAD,IACjBA,QAAQ,CAACC,EAAT,KAAgBN,MAAM,CAACO,OAAvB,GACI,EAAE,GAAGF,QAAL;AAAeI,QAAAA,KAAK,EAAEJ,QAAQ,CAACI,KAAT,GAAiB,CAAjB,GAAqBJ,QAAQ,CAACI,KAAT,GAAiB,CAAtC,GAA0C;AAAhE,OADJ,GAC0EJ,QAFxE;AAFH,KAAP;AAMH;;AACD,MAAIL,MAAM,CAACC,IAAP,KAAgBL,KAAK,CAACgB,KAA1B,EAAiC;AAC7B,WAAO,EACH,GAAGb,KADA;AAEHI,MAAAA,IAAI,EAAEJ,KAAK,CAACI,IAAN,CAAWU,MAAX,CAAmBR,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBN,MAAM,CAACO,OAAvD;AAFH,KAAP;AAIH;AACJ,CAnCM","sourcesContent":["import { types } from \"../types\"\r\nimport { bookInitialState } from \"./bookInitialState\"\r\nexport const bookReducer = (state = bookInitialState, action) => {\r\n    if (action.type === types.EKLE) {\r\n        return {\r\n            ...state,\r\n            cart: state.cart.find((cartItem) => cartItem.id === action.payload.id)\r\n                ? state.cart.map((cartItem) =>\r\n                    cartItem.id === action.payload.id ?\r\n                        { ...cartItem, count: cartItem.count + 1 } : cartItem) :\r\n                [\r\n                    ...state.cart, { ...action.payload, count: 1 }\r\n                ],\r\n        }\r\n    }\r\n    if (action.type === types.ARTIR) {\r\n        return {\r\n            ...state,\r\n            cart: state.cart.map((cartItem) =>\r\n                cartItem.id === action.payload ?\r\n                    { ...cartItem, count: cartItem.count + 1 } : cartItem)\r\n        }\r\n    }\r\n    if (action.type === types.AZALT) {\r\n        return {\r\n            ...state,\r\n            cart: state.cart.map((cartItem) =>\r\n                cartItem.id === action.payload ?\r\n                    { ...cartItem, count: cartItem.count > 1 ? cartItem.count - 1 : 1 } : cartItem)\r\n        }\r\n    }\r\n    if (action.type === types.CİKAR) {\r\n        return {\r\n            ...state,\r\n            cart: state.cart.filter((cartItem) => cartItem.id !== action.payload),\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}